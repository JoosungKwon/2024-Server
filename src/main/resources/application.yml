spring:
  profiles:
    group: # Run - Edit Configurations - Active Profiles에서 설정
      local: local
      dev: common, dev
      prod: common, prod
---
spring:
  config:
    activate:
      on-profile: "common"

  application:
    name: demo

server:
  port: 9000

springdoc:
  swagger-ui:
    path: /swagger-ui.html
    groups-order: DESC
    operationsSorter: method
    disable-swagger-default-url: true
    display-request-duration: true
  api-docs:
    path: /api-docs
  show-actuator: true
  default-consumes-media-type: application/json
  default-produces-media-type: application/json
  paths-to-match:
    - /**

jwt:
  secret-key: ${JWT_SECRET_KEY}  # JWT key. 수정해주세요

---
spring:
  config:
    activate:
      on-profile: "prod"
  jpa:
    database-platform: org.hibernate.dialect.MySQLDialect
    hibernate:
      ddl-auto: none
      # create, update, create-drop, none 등의 옵션이 있습니다.
      # create: 기존테이블 삭제 후 다시 생성
      # update: 변경된 부분만 반영
      # create-drop: create와 같으나 종료 시점에 테이블 DROP
      # none: 사용하지 않음
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    # DDl 생성 시 데이터베이스 고유의 기능 사용여부
    generate-ddl: false
    # 실행되는 쿼리문 보여주기 여부
    show-sql: false
    properties:
      hibernate:
        format_sql: false

---
spring:
  config:
    activate:
      on-profile: "dev"

  datasource:
    url: jdbc:mysql://demo-db:3306/demo?autoReconnect=true&setTimezone=Asia/Seoul
    username: root
    password: ${DB_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver # mysql 8버전

  jpa:
    database-platform: org.hibernate.dialect.MySQLDialect
    hibernate:
      ddl-auto: none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    generate-ddl: false
    open-in-view: false
    show-sql: true
    properties:
      hibernate:
        format_sql: true

  OAuth2:
    google:
      url: https://accounts.google.com/o/oauth2/v2/auth
      client-id: 207679436613-p7j1lr5bcfhja57oi7d36k1u0kf7med7.apps.googleusercontent.com
      client-secret: "google-secret"
      callback-login-url: http://localhost:9000/app/users/auth/google/login/callback
      scope: https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/userinfo.profile
    kakao:
      url: https://kauth.kakao.com/oauth/authorize
      client-id: "kakao-client-id"
      client-secret: "kakao-secret"
      callback-login-url: http://localhost:9000/app/users/auth/kakao/login/callback
      scope: profile_nickname, account_email

application:
  build:
    name: demo
    region: ap-northeast-2
    version: 0.0.1-SNAPSHOT
    environment: dev
  storage:
    provider: aws
    environment: dev
    postFileBucket:
      region: ap-northeast-2
      bucketName: demo-joosung
      uploadUrlExpirationSeconds: 1200
      downloadUrlExpirationSeconds: 1200
    UserFileBucket:
      region: ap-northeast-2
      bucketName: demo-joosung
      uploadUrlExpirationSeconds: 1200
      downloadUrlExpirationSeconds: 1200

---
server:
  port: 9000

spring:
  config:
    activate:
      on-profile: "local"

  application:
    name: demo-local

  datasource:
    url: jdbc:mysql://localhost:3306/demo?autoReconnect=true&setTimezone=Asia/Seoul
    username: root
    password: test
    driver-class-name: com.mysql.cj.jdbc.Driver # mysql 8버전
    # driver-class-name: com.mysql.jdbc.Driver # mysql 5버전

  jpa:
    database-platform: org.hibernate.dialect.MySQLDialect
    hibernate:
      ddl-auto: none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    generate-ddl: false
    open-in-view: false
    show-sql: true
    properties:
      hibernate:
        format_sql: true

  sql:
    init:
      mode: always
      platform: mysql
      schema-locations: classpath:sql/schema.sql

  OAuth2:
    google:
      url: https://accounts.google.com/o/oauth2/v2/auth
      client-id: 207679436613-p7j1lr5bcfhja57oi7d36k1u0kf7med7.apps.googleusercontent.com
      client-secret: "google-secret"
      callback-login-url: http://localhost:9000/app/users/auth/google/login/callback
      scope: https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/userinfo.profile
    kakao:
      url: https://kauth.kakao.com/oauth/authorize
      client-id: "kakao-client-id"
      client-secret: "kakao-secret"
      callback-login-url: http://localhost:9000/app/users/auth/kakao/login/callback
      scope: profile_nickname, account_email


springdoc:
  swagger-ui:
    path: /swagger-ui.html
    groups-order: DESC
    operationsSorter: method
    disable-swagger-default-url: true
    display-request-duration: true
  api-docs:
    path: /api-docs
  show-actuator: true
  default-consumes-media-type: application/json
  default-produces-media-type: application/json
  paths-to-match:
    - /**

jwt:
  secret-key: UwKYibQQgkW7g-*k.ap9kje-wxBHb9wdXoBT4vnt4P3sJWt-Nu  # JWT key. 수정해주세요

application:
  build:
    name: demo
    region: ap-northeast-2
    version: 0.0.1-SNAPSHOT
    environment: local
  storage:
    provider: aws
    environment: dev
    postFileBucket:
      region: ap-northeast-2
      bucketName: demo-joosung
      uploadUrlExpirationSeconds: 1200
      downloadUrlExpirationSeconds: 1200
    UserFileBucket:
      region: ap-northeast-2
      bucketName: demo-joosung
      uploadUrlExpirationSeconds: 1200
      downloadUrlExpirationSeconds: 1200